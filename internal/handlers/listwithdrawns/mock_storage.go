// Code generated by MockGen. DO NOT EDIT.
// Source: mishin-gophermat/internal/handlers/listwithdrawns (interfaces: WithdrawnsGetter)

// Package listwithdrawns is a generated GoMock package.
package listwithdrawns

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWithdrawnsGetter is a mock of WithdrawnsGetter interface.
type MockWithdrawnsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawnsGetterMockRecorder
}

// MockWithdrawnsGetterMockRecorder is the mock recorder for MockWithdrawnsGetter.
type MockWithdrawnsGetterMockRecorder struct {
	mock *MockWithdrawnsGetter
}

// NewMockWithdrawnsGetter creates a new mock instance.
func NewMockWithdrawnsGetter(ctrl *gomock.Controller) *MockWithdrawnsGetter {
	mock := &MockWithdrawnsGetter{ctrl: ctrl}
	mock.recorder = &MockWithdrawnsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawnsGetter) EXPECT() *MockWithdrawnsGetterMockRecorder {
	return m.recorder
}

// WithdrawnsGet mocks base method.
func (m *MockWithdrawnsGetter) WithdrawnsGet(arg0 context.Context, arg1 string) ([]map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithdrawnsGet", arg0, arg1)
	ret0, _ := ret[0].([]map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WithdrawnsGet indicates an expected call of WithdrawnsGet.
func (mr *MockWithdrawnsGetterMockRecorder) WithdrawnsGet(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawnsGet", reflect.TypeOf((*MockWithdrawnsGetter)(nil).WithdrawnsGet), arg0, arg1)
}
