// Code generated by MockGen. DO NOT EDIT.
// Source: mishin-gophermat/internal/handlers/balance (interfaces: BalanceGetter)

// Package balance is a generated GoMock package.
package balance

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBalanceGetter is a mock of BalanceGetter interface.
type MockBalanceGetter struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceGetterMockRecorder
}

// MockBalanceGetterMockRecorder is the mock recorder for MockBalanceGetter.
type MockBalanceGetterMockRecorder struct {
	mock *MockBalanceGetter
}

// NewMockBalanceGetter creates a new mock instance.
func NewMockBalanceGetter(ctrl *gomock.Controller) *MockBalanceGetter {
	mock := &MockBalanceGetter{ctrl: ctrl}
	mock.recorder = &MockBalanceGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceGetter) EXPECT() *MockBalanceGetterMockRecorder {
	return m.recorder
}

// BalanceGet mocks base method.
func (m *MockBalanceGetter) BalanceGet(arg0 context.Context, arg1 string) (float64, float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BalanceGet", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(float64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// BalanceGet indicates an expected call of BalanceGet.
func (mr *MockBalanceGetterMockRecorder) BalanceGet(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BalanceGet", reflect.TypeOf((*MockBalanceGetter)(nil).BalanceGet), arg0, arg1)
}
